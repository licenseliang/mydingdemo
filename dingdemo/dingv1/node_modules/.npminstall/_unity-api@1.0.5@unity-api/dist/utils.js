'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getAPIPrefix = getAPIPrefix;
exports.getFullPath = getFullPath;
exports.formatURL = formatURL;

var _unityUtils = require('unity-utils');

var _url = require('url');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function getAPIPrefix(APINamespace) {
    var reAbsolute = /^(\/|https?:\/\/)/ig;
    return reAbsolute.test(APINamespace) ? APINamespace : '/' + APINamespace;
}

function getFullPath(APINamespace, namespace) {
    var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    path = [].concat(path);
    return _unityUtils.uri.join.apply(_unityUtils.uri, [getAPIPrefix(APINamespace), namespace].concat(_toConsumableArray(path))).replace(':/', '://');
}

function formatURL() {
    var APINamespace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var namespace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
    var query = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    return (0, _url.format)({
        pathname: getFullPath(APINamespace, namespace, path),
        query: _unityUtils.uri.query(query)
    });
}