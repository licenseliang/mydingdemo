'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _isarray = require('isarray');

var _isarray2 = _interopRequireDefault(_isarray);

var _isPlainObject = require('is-plain-object');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _deepcopy = require('deepcopy');

var _deepcopy2 = _interopRequireDefault(_deepcopy);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = function (_React$Component) {
  _inherits(Component, _React$Component);

  function Component(props, logic) {
    _classCallCheck(this, Component);

    var _this = _possibleConstructorReturn(this, (Component.__proto__ || Object.getPrototypeOf(Component)).call(this, props));

    if ((0, _isPlainObject2.default)(logic)) {
      _this.logic = logic;
      _this.state = {};
      if (typeof logic.defaults === 'function') {
        _this.state = logic.defaults(props) || {};
      }
    } else {
      throw Error('related Logic haven\'t given!');
    }

    _this.bind = _this.bind.bind(_this);
    _this.execute = _this.execute.bind(_this);
    _this.renderPage = _this.renderPage.bind(_this);
    return _this;
  }

  // 将宿主对象传给所有的LogicRender，供其调用logic方法


  _createClass(Component, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { host: this };
    }
  }, {
    key: 'bind',
    value: function bind() {
      var _this2 = this;

      for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
        params[_key] = arguments[_key];
      }

      return function () {
        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        _this2.execute.apply(_this2, params.concat(args));
      };
    }
  }, {
    key: 'execute',
    value: function execute() {
      for (var _len3 = arguments.length, params = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        params[_key3] = arguments[_key3];
      }

      var t = this;
      var actions = params.shift();
      var ctx = (0, _objectAssign2.default)({}, _utils.context, {
        setState: t.setState.bind(t),
        getState: function getState() {
          return (0, _deepcopy2.default)(t.state);
        },
        getProps: function getProps() {
          return (0, _deepcopy2.default)(t.props);
        }
      });

      if (!(0, _isarray2.default)(actions)) {
        actions = [actions];
      }

      (function execAction(args) {
        if (actions.length) {
          var action = actions.shift();

          // 如果logic中不存在action就报错退出
          if (t.logic[action]) {
            var ret = t.logic[action].apply(null, [ctx].concat(params).concat([args]));
            if (ret && typeof ret.then === 'function') {
              ret.then(function (data) {
                if (data !== false) {
                  execAction(data);
                }
              });
            } else if (ret !== false) {
              execAction(ret);
            }
          } else {
            throw Error('action ' + action + ' is not defined');
          }
        }
      })();
    }
  }, {
    key: 'renderPage',
    value: function renderPage() {
      return _react2.default.createElement(
        'div',
        null,
        'Hello, World!'
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return this.renderPage();
    }
  }]);

  return Component;
}(_react2.default.Component);

Component.childContextTypes = {
  host: _react.PropTypes.any
};
exports.default = Component;
module.exports = exports['default'];